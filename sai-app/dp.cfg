BEGIN_DP_CFG
NUM_SUBSCRIBERS=100
NUMCORE=2
# comma separated list of     permit out proto ip from any 53-55 to 1922.68.2.19 43-45, permit out proto ip from any 53-55 to 1922.68.2.19 43-45
SP_SWITCH_RULE = 
SP_MGMT_IP = {{ .Values.podIP}}
SP_MGMT_IPV6 = 
ARP_SPA=0
SP_LOGLEVEL = 
FP_LOGLEVEL =
# this will be used to timeout the local arpcache maintained by DP
# unit is seconds
ARP_TIMER=
# this will be used to timeout the Eth PDU ARP table entries maintained by DP
# unit is seconds
ETH_PDU_ARP_TIMER=
INCLUDE_FIRST_CORE =
FP_CORE_START = 1
FP_CORE_END = 1
#MAX_RETRANSMIT_MSG = Maximum number of retransmitted message to be stored
MAX_RETRANSMIT_MSG=
#RETRANSMIT_TIMEPERIOD = Time after which PFCP request msg has to be retransmitted (in seconds)
RETRANSMIT_TIMEPERIOD=
#NUM_RETRANSMIT_RETRIES = Number of retries to send PFCP req msg before discarding
NUM_RETRANSMIT_RETRIES=
UPF_SUPPORTED_FEATURES=BUCP,DDND,DLBD,TRST,FTUP,PFDM,HEEU,TREU,EMPU,PDIU,UDBC,QUOAC,TRACE,FRRT,PFDE,EPFAR,DPDRA,ADPDP,UEIP,SSET,MNOP,MTE.BUNDL,GCOM,MPAS,RTTL,VTIME, NORP, IPTV, IP6PL, TSCU, MPTCP, ATSSSLL, QFQM, GPQM, MT_EDT, CIOT, ETHAR, DDDS, RDS, RTTWP, QUASF, NSPOC, L2TP, UPBER, RESPS, IPREP, DNSTS, DRQOS, MBSN4, PSUPRM, EPPI, RATP, UPIDP, AFSFC, MPQUIC, REDSM
#UPF_SUPPORTED_FEATURES=
NO_GTP_RECOVERY_TS=

#GTP_IP=ipv4/24@eth@vlanid@networkinstanceid, ipv4/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
GTP_IP={{ .Values.podIP}}/24@net1@4097
#GTP_IP6=ipv6/24@eth@vlanid@networkinstanceid, ipv6/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
GTP_IP6=

#GTP_CORE_IP=ipv4/24@eth@vlanid@networkinstanceid, ipv4/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
GTP_CORE_IP={{ .Values.podIP}}/24@net1@4097
#GTP_CORE_IP6=ipv6/24@eth@vlanid@networkinstanceid, ipv6/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
GTP_CORE_IP6=

#CP_INTF_IP=ipv4/24@eth@vlanid@networkinstanceid, ipv4/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
CP_INTF_IP={{ .Values.podIP}}/24@net1@4097
#CP_INTF_IP6=ipv6/24@eth@vlanid@networkinstanceid, ipv6/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
CP_INTF_IP6=

#LI_INTF_IP=ipv4/24@eth@vlanid@networkinstanceid, ipv4/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
LI_INTF_IP={{ .Values.podIP}}/24@net1@4097
#LI_INTF_IP6=ipv6/24@eth@vlanid@networkinstanceid, ipv6/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
LI_INTF_IP6=

#PDN_IP=ipv4/24@eth@vlanid@networkinstanceid, ipv4/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
PDN_IP={{ .Values.podIP}}/24@net1@4097
#PDN_IP6=ipv6/24@eth@vlanid@networkinstanceid, ipv4/16@eth@vlanid (if network instance id is not present, it will be taken as zero)
PDN_IP6=

GLOBAL_TEID_ALLOC=

#NAT_PUBLIC_IPV4=ipv4-address
NAT_PUBLIC_IPV4=
#NAT_PUBLIC_IPV6=ipv6-address
NAT_PUBLIC_IPV6=
#NAT_FLOW_IDLE_TIMEOUT=time in millisec
NAT_FLOW_IDLE_TIMEOUT=
#MAX_NAT_FLOWS=Total number of NAT flow mappings allowed
MAX_NAT_FLOWS=

#TEID = <gtpip4>@teidrangebits@teidrangevalue, ...
TEID=
#TEID6 = <gtpip6>@teidrangebits@teidrangevalue, ...
TEID6=
#TEID_CORE = <gtpip4>@teidrangebits@teidrangevalue, ...
TEID_CORE=
#TEID_CORE6 = <gtpip6>@teidrangebits@teidrangevalue, ...
TEID_CORE6=
#TEID_CP = <gtpip4>@teidrangebits@teidrangevalue, ...
TEID_CP=
#TEID_CP6 = <gtpip6>@teidrangebits@teidrangevalue, ...
TEID_CP6=

#IP_POOL=beginip@endip@name@<networkInstance>, beginip@endip@name@<networkInstance>, ...
IP_POOL=11.11.11.1@11.11.255.255@pool_ipv4
#IP_POOL6=beginip@endip@prefix@name@<networkInstance>@sst@sd, beginip@endip@prefix@name@<networkInstance>@sst@sd, ...
IP_POOL6=

#IP_USAGE_THRESHOLD parameter(between 0-100)
IP_USAGE_THRESHOLD=
#IP_USAGE_VALIDITY_TIME time in seconds
IP_USAGE_VALIDITY_TIME=

#Eth PDU details for sending/receiving udp encapsulated packets
#ETH_PDU_TUNNEL=txipv4@txport@rxport@optionalNetworkInstanceId, ....
ETH_PDU_TUNNEL=
#ETH_PDU_TUNNEL6=txipv6@txport@rxport@optionalNetworkInstanceId, ....
ETH_PDU_TUNNEL6=

#Raw PDU details for sending/receiving udp encapsulated packets
#RAW_PDU_TUNNEL=txipv4@txport@rxport@optionalNetworkInstanceId, ....
RAW_PDU_TUNNEL=
#RAW_PDU_TUNNEL6=txipv6@txport@rxport@optionalNetworkInstanceId, ....
RAW_PDU_TUNNEL6=

#VXLAN_PDU_TUNNEL=txipv4@txport@rxport@optionalNetworkInstanceId, ....
VXLAN_PDU_TUNNEL=

#Ip PDU details for sending/receiving udp encapsulated packets
#IP_PDU_TUNNEL=txipv4@txport@rxport@optionalNetworkInstanceId, ....
IP_PDU_TUNNEL=
#IP_PDU_TUNNEL6=txipv6@txport@rxport@optionalNetworkInstanceId, ....
IP_PDU_TUNNEL6=

#GRE_TUNNEL=txipv4@optionalNetworkInstanceId, ...
GRE_TUNNEL=
#GRE_TUNNEL6=txipv6@optionalNetworkInstanceId, ...
GRE_TUNNEL6=

#PROXY_ARP_ENABLED=0/1
PROXY_ARP_ENABLED=
#set this to 1 if UPF must send load control info in PFCP messages to CP
LOAD_CONTROL_INFO=
OVERLOAD_CONTROL_INFO=
OVERLOAD_CONTROL_TPS=
#time in seconds
OVERLOAD_CONTROL_VALIDITY_TIME=
#specify the absolute path of JSON rule file
PREDEFINE_RULE_FILE=
APPLICATION_ID_JSON_FILE_PATH=
USER_ID_JSON_FILE_PATH=
UPF_CONFIG_FILE_PATH=

LOG_SERVER_IP = 
LOGSERVERGW=
#LOGSERVERGW=logesrverGwIp
LOG_SERVER_PORT = 
PKT_RECORDING = 0
PKT_RECORDING_DIR =
SP_DEBUG_FLAG=0
FP_DEBUG_FLAG=0
AF_PACKET=
MAX_RATE_HOST=
#MAX_RATE_HOST = Its rate is in Kbps
# RATE_CONTROL_TIME_PERIOD_PARAM is miliseconds
RATE_CONTROL_TIME_PERIOD_PARAM = 1000
#MTU=interface_name1@mtu_size1, interface_name2@mtu_size2,..... 
MTU=net1@1500
DPDK_FRAME_SIZE=
DPDK_RXQ_SIZE = 1024
DPDK_TXQ_SIZE = 2048
DPDK_RAM_8192MULTIPLIER =3
DPDK_RING_SIZE = 8192 
DPDK_MAX_QUEUES = 1
DPDK_TX_ATTEMPTS = 0
DPDK_VHOST =
DPDK_NORSS =
DPDK_LINK_DELAY =
NOMULTISEG =
#INTF_MAP = ACCESS@enp0s8.4097,CORE@enp0s8.2345,LI_FUNC@enp0s8.1234,CP_FUNC@enp0s8.1234, SGI_LAN@enp0s8.1234
INTF_MAP =ACCESS@net1.4097,CORE@net1.4097,LI_FUNC@net1.4097,CP_FUNC@net1.4097,SGI_LAN@net1.4097
#NI = name@1, name@2 and so on. These represent network instance names and id's
NI=
#NI_INTF_MAP = 1@enp0s8.4097, 2@enp0s8.2345 etc. This maps the ports to network instance id's
NI_INTF_MAP=
#ACCESS_GW = 192.68.0.5, <ip>@networkinstanceid, etc. if the field after @ is not present 0 will be taken
#all GW fields below follow similar rules
ACCESS_GW = 192.168.200.189
#ACCESS_GW6 = 192.68.0.5
ACCESS_GW6 = 
#ACCESS_GW = 192.68.0.5
CORE_GW = 192.168.200.191
#CORE_GW6 = 192.68.0.5
CORE_GW6 = 
#likewise as above
CP_GW = 
#LI_GW6 = 192.68.0.5
CP_GW6 = 
LI_GW = 
#LI_GW6 = 192.68.0.5
LI_GW6 = 
SGILAN_GW = 
SGILAN_GW6 = 
#set this to 1 if PFCP messages are expected on MGMT IP
PFCP_ON_MGMT_IP=1
JUMBO_FRAME_DISABLE =1
#ODP_PORTS=eth0,eth1,eth2,...
ODP_PORTS=eth0
# set to 0 for packet sockets, 1 for netmap
ODP_BACKEND=0
# the first core where linux would run, all cores after this run fast path
# in dpdk case this is the master core obtained from dpdk api based on the coremask passed
BASECORE=
WATCHDOG = 0
CIDR = 24 
CIDR6 = 64 
#LAG = eth0:eth1,eth2:eth3
LAG = 
TAP_DELAY=
# specify eg. xaui to create tap_xaui
TAPTOKEN=eth
#buffer count per core for DL Buffering
BUFFER_COUNT_PER_CORE=
#specify 1 for creating tap_xaui1 for port 0
TAPOFFSET=0

# simulator specific variables
NUMINTERFACES=
# set below to 1 if this is wanted, if it is set to 1 then LG_QFI value will be used
WANT_LG_QFI=
LG_QFI=
IP_VER=6  #6 if ipv6 enabled on LG or keep blank
NAS = 50000
R = 1000
PSB = 650
FRAGMENTED = 0
FRAGMENT_MTUSIZE = 300
# timer below is in microseconds
LG_BASE_PORT=
N = 1000
C = 1
STEID = 3
MTEID = 150000
STEPTEID = 3
MODE=1
UL_WEIGHT=50
DL_WEIGHT=50
#IMIX_PACKET=packet_size@percentage, packet_size2@percentage2,... [Eg. 650@30,1400@70]
IMIX_PACKET=
#LG_ENODEB_IP=eNB_ip1,eNB_ip2,..... (Enter eNB IP according to IP_VER parameter filled)
LG_ENODEB_IP=
LG_FIXED_UE_IP=
VLAN_TAG=
#ESPMODE=TUNN, TRANS(one of these or leave it blank)
ESPMODE=
ESPONUDP=
#INITVECTOR (initializing vector data)
INITVECTOR=
#CRYPTOALGO=AES, AES-CBC, DES, DES-CBC, 3DES, 3DES-CBC, AES-GCM (one of these)
CRYPTOALGO=
#CRYPTOKEY=0x11223344 (same format)
CRYPTOKEY=
#AUTHALGO=HMAC-MD5-96, HMAC-SHA-1-96, AES-GCM (one of these)
AUTHALGO=
#AUTHKEY=0x112233 (same format)
AUTHKEY=
AESGCM_SALT=
#GTP_GWIP/IP6 format -- selfip@gwip@subnet@interface_vlan (interface_vlan eg. eth0.4091, also 4097 represents novlan)
#Udp checksum offload
UDP_CKSUM_OFFLOAD=
OLDPING=
NOLOCK=
TRYLOCK=
#It is per core and per message type instance like gtp,sgi and gre
MAX_REASSEMBLIES=
#timer value is in seconds
REASSEMBLY_PERIODIC_TIMER=
#timeout value is in seconds
REASSEMBLY_TIMEOUT=
PMTU=
#DSCP_VLAN_PRIORITY_MAP=dscpvalue:vlanpriority,dscpvalue:vlanpriority...
DSCP_VLAN_PRIORITY_MAP=
#MEMPOOL= <size1>:<numBuffers>, <size2>:<numBuffers>, ....
MEMPOOL=64:300000,304:1000000,1024:400000,1200000:50,2400000:1
PCAP=
NE_NAME=
TRACE_DIR=
#SMF = IP1@NetworkInstanceId,IP2,IP3...
#if NetworkInstanceId is not present (the @ clause is optional, the netid is taken as zero)
SMF=
#SMF6 = IP1,IP2,IP3...
SMF6=
QOSMOS_LICENSE=
NAVL_PLUGINS_DIR=
QOSMOS_FLOWS=
IPOQUE_LICENSE=
SGWU_CSID=
PGWU_CSID=
# below in miliseconds
PFCP_RESPONSE_TIMER=

#rate script calling
RATE_SCRIPT=

#P4 offload
P4_OFFLOAD=
#this maps the port of CPU to then physical NIC port CPUPORT:NICPORT, CPUPORT:NICPORT,...
P4_PORTMAP=

#if the below is set in miliseconds, then GTP echo requests are sent out
GTP_ECHO_REQUEST_TIMER=

#below setting is used to declare a GTP Path failure if so many echo requests are not responded to
GTP_ECHO_REQUEST_MAX_RETRIES=

#if the below is set in miliseconds, UPF sends out hearbeat requests at this periodicity to SMF/CP
HEARTBEAT_TIMER=

# after these many retires, Association with CP is considered toast
HEARTBEAT_RETRIES=

QUERY_NIC_RSS=

#if the below is set in miliseconds, UPF uses this to release Association during EPFAR feature exercise
ASSOC_REL_EPFAR_TIMER=

#if the below present is set (period is in unit of miliseconds), UPF uses this to release Association in graceful way
GRACEFUL_RELEASE_PERIOD_PRESENT=
GRACEFUL_RELEASE_PERIOD=

# timers in miliseconds for removing idle flows in case of appid detection and flow tracking
FLOW_IDLE_PERIODIC_TIMEOUT=
FLOW_IDLE_EXPIRY_TIMEOUT=

#this should be in the format of uuid (lookup wikipedia)
#eg. 123e4567-e89b-12d3-a456-426614174000

NF_INSTANCE_ID=
NO_IP_PLUMBING=

#user_plane_node_id should be in the format of hex value like 0x1122334455667788
5GS_USER_PLANE_NODE_ID=
#The entries below map the dstt port on a one to one basis with nwtt port, the key is dstt port and must be unique for each entry
#format is dsttport@nwttport,dsttport@nwttport,....
TSN_PORT_MAP=

PMF_IP=
PMF_IP6=
PMF_PORT_3GPP=
PMF_PORT_NON_3GPP=
# mac should be like a:b:c:d:e:f
PMF_MAC_3GPP=
PMF_MAC_NON_3GPP=
#PMF_TIMER=<value in milliseconds>
PMF_TIMER=

#PER_QFI_PMF_IP=<qfi>@<pmf_ipv4_address>,........
#PER_QFI_PMF_IP6=<qfi>@<pmf_ipv6_address>,..........
#PER_QFI_PMF_PORTS=<qfi>@<pmf_port_3gpp>@<pmf_port_non_3gpp>,......
#PER_QFI_PMF_INFO_MAC=<qfi>@><pmf_mac_3gpp>@<pmf_mac_non_3gpp>,.......

PER_QFI_PMF_IP=
PER_QFI_PMF_IP6=
PER_QFI_PMF_PORTS=
PER_QFI_PMF_INFO_MAC=

RAN_TIME_SYNC=
DPI=
SUDO=

#ipv4@net_id e.g 10.3.10.136@0
L2TP_PEER_IP=

#ipv6@net_id e.g 2001:1::7@0
L2TP_PEER_IP6=

# 2 for PPP_CHAP, 3 for PPP_PAP
L2TP_PPP_AUTH_METHOD=
L2TP_PPP_USERNAME=
L2TP_PPP_PASSWORD=
L2TP_PPP_LCP_TIMEOUT=
L2TP_PPP_TIMEOUT=
L2TP_PPP_MAX_RETRY=

MPTCP_PROXY_TYPE=
MPTCP_PROXY_PORT=
MPTCP_PROXY_IP4=
MPTCP_PROXY_IP6=
MPTCP_N6_ROUTABLE_IP4=
MPTCP_N6_ROUTABLE_IP6=
#MPTCP_UE_IP4_POOL_3GPP=beginip@endip
MPTCP_UE_IP4_POOL_3GPP=
#MPTCP_UE_IP4_POOL_NON_3GPP=beginip@endip
MPTCP_UE_IP4_POOL_NON_3GPP=
#MPTCP_UE_IP6_POOL_3GPP=beginip@endip
MPTCP_UE_IP6_POOL_3GPP=
#MPTCP_UE_IP6_POOL_NON_3GPP=beginip@endip
MPTCP_UE_IP6_POOL_NON_3GPP=

#set the value in Kbps (Kilo Bits per second, 1Mbps = 1000), unset or 0 means infinite rate
MAX_UL_RATE=
MAX_DL_RATE=

#ipv4
WEBSERVER_IP={{ .Values.podIP}}
#ipv6 
WEBSERVER_IP6=
#HTTP PORT
WEBSERVER_PORT=9080
#HTTPS PORT
WEBSERVER_PORT_HTTPS=

IPSEC=
#TCP Stack related parameters
#all timer parameters in microseconds
FP_TCP_USER_TIMEOUT=
FP_TCP_INITIAL_RETRANSMISSION_TIMEOUT=
FP_TCP_MSL_TIMEOUT=
FP_TCP_TIME_WAIT_TIMEOUT=
FP_TCP_INITIAL_PER_CONNECTION_RX_FIFO_SIZE_KB=
FP_TCP_INITIAL_PER_CONNECTION_TX_FIFO_SIZE_KB=
FP_TCP_MAX_FIFO_CHUNK_SIZE_BYTES=
FP_TCP_MAX_CONNECTIONS=
FP_TCP_SACK_PERMITTED=
FP_TCP_WINDOW_SCALE=
FP_TCP_MSS=
FP_TCP_SYN_RCVD_TIMER=
FP_TCP_SYN_SENT_TIMER=
FP_TCP_CHECKSUM_VERIFICATION=
FP_TCP_ALPHA=
FP_TCP_BETA=
FP_TCP_LBOUND_RTT=
FP_TCP_UBOUND_RTT=
FP_TCP_PAWS=
FP_TCP_CONG_ALGO=
FP_TCP_RACK=
FP_TCP_RACK_TLP_MAX_ACK_DELAY=
FP_TCP_RACK_MIN_RTT_WIN_SIZE=
# 0 or blank meands disabled, 1 means enable, 2 means enable explicitly on user request for connections
FP_TCP_MPTCP_ENABLE=
FP_TCP_MPTCP_CHECKSUM=
FP_TCP_MPTCP_PATH_MANAGER=
FP_TCP_MPTCP_NUM_SUBFLOWS=
FP_TCP_MPTCP_SCHEDULER=
FP_TCP_MPTCP_CWND_LIMITED=

#format for below is ip, ip, ip
#eg. 10.10.10.10, 11.11.11.11
FP_TCP_MPTCP_SELF_IP=
FP_TCP_MPTCP_SELF_IP6=
FP_TCP_MPTCP_RETRANSMISSION_TIMEOUT=
NRF_IP=
NRF_IP_PORT=
NRF_HEARTBEAT_TIMER=
NUM_MULTIQTAP_QUEUES=
NUM_MULTIQGTP_QUEUES=

#prometheus
PROMETHEUS_IP=
PROMETHEUS_PORT=

# 1 means no authentication. 
NO_WEB_AUTH=1
# memif config
MEMIF_SLOTS=
MEMIF_PAYLOAD=

USE_SP_SLAVE_THREADS=
NUM_SP_SLAVE_THREADS=
VLAN_STRIP=

HA_IP=
HA_IP_PEER=
HA_PORT=

# when set to 1, it preserves association even when SMF is detected to be down
PRESERVE_ASSOCIATION=
UPF_MBS_MULTICAST_GTP_IP=
UPF_MBS_MULTICAST_GTP_IP6=
UPF_MBS_LOCAL_INGRESS_TUNNEL_UDP_PORT_START=
UPF_MBS_LOCAL_INGRESS_TUNNEL_UDP_PORT_END=
HTTP2_IP=
BYPASS_SWITCH_RULE=

#in miliseconds
DL_BUFFERING_PERIODIC_TIMER=

LTUPF=

END_DP_CFG
